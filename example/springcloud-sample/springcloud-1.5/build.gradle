/**
 * 父类通用配置
 * all projects是对所有project的配置
 */
allprojects {
    group 'com.ding'
    version '1.0-SNAPSHOT'
    apply plugin: 'java'
    apply plugin: 'idea'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
/**
 * subprojects是对所有Child Project的配置
 */
subprojects {

    //打包插件
    apply plugin: 'io.spring.dependency-management'
//    apply plugin: 'org.springframework.boot'
    apply plugin: 'docker'

    ext {
        springBootVersion = '1.5.22.RELEASE'
        springcloudNetflixVersion = "1.4.6.RELEASE"
        springcloudVsersion = "1.4.6.RELEASE"
    }
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://central.maven.org/maven2/" }
        mavenCentral()
    }

    dependencies {
        implementation (
                "org.springframework.boot:spring-boot-parent:${springBootVersion}",
                "org.springframework.boot:spring-boot-starter:${springBootVersion}",
                "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
                //加入security，是因为访问eureka-server需要用户名和密码访问，为了安全
                "org.springframework.boot:spring-boot-starter-security:${springBootVersion}",

                //Spring Boot Actuator，感应服务端变化
                "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
                "org.springframework.boot:spring-boot-devtools:${springBootVersion}",

                "com.alibaba:fastjson:1.2.62",
                group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

        )
//        providedCompile (
//
//        )

//        provider(
//                group:"org.apache.tomcat.embed",name:"tomcat-embed-core",version:  '8.5.43'
//        )
        testImplementation group: 'junit', name: 'junit', version: '4.12'
    }
}
/**
 * gradle脚本执行所需依赖，分别是对应的maven库和插件
 */
buildscript {
    ext {
        springBootVersion = '1.5.22.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://central.maven.org/maven2/" }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}